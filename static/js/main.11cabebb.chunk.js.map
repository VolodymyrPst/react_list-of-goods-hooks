{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","select","setSelect","isReversed","setReversed","Reset","type","className","onClick","cn","Alphabetically","Length","res","sort","a","b","localeCompare","length","reverse","sortMethod","map","item","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,mEAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,gCAAAA,E,gBAAAA,E,kBAAAA,E,UAAAA,M,KAOE,IAAME,EAAgB,WAC3B,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAmBC,EAAnB,KAoBMC,EAAQ,WACZ,MAAe,KAAXJ,GAAiBE,EAEjB,wBACEG,KAAK,SACLC,UAAU,4BACVC,QAAS,WACPN,EAAUL,EAASQ,OACnBD,GAAY,IALhB,mBAaG,MAGT,OACE,sBAAKG,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACED,KAAK,SACLC,UAAWE,IAAG,iBACZ,CAAE,WAAYR,IAAWJ,EAASa,iBACpCF,QAAS,WACPN,EAAUL,EAASa,iBALvB,iCAWA,wBACEJ,KAAK,SACLC,UAAWE,IAAG,oBACZ,CAAE,WAAYR,IAAWJ,EAASc,SACpCH,QAAS,WACPN,EAAUL,EAASc,SALvB,4BAWA,wBACEL,KAAK,SACLC,UAAWE,IAAG,oBACZ,CAAE,YAAaN,IACjBK,QAAS,WACPJ,GAAaD,IALjB,qBAWA,cAACE,EAAD,OAGF,6BA5Ee,WACjB,IAAIO,EAAG,UAAOd,GAcd,OAZIG,IAAWJ,EAASa,iBACtBE,EAAM,UAAId,GAAiBe,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,OAGxDd,IAAWJ,EAASc,SACtBC,EAAM,UAAId,GAAiBe,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,WAGrDd,IACFS,EAAMA,EAAIM,WAGLN,EA+DDO,GAAaC,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCxG3DC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.11cabebb.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  Alphabetically = 'alphabetically',\n  Length = 'length',\n  Reverse = 'reverse',\n  Reset = '',\n}\n\nexport const App: React.FC = () => {\n  const [select, setSelect] = useState('');\n  const [isReversed, setReversed] = useState(false);\n\n  const sortMethod = () => {\n    let res = [...goodsFromServer];\n\n    if (select === SortType.Alphabetically) {\n      res = [...goodsFromServer].sort((a, b) => a.localeCompare(b));\n    }\n\n    if (select === SortType.Length) {\n      res = [...goodsFromServer].sort((a, b) => a.length - b.length);\n    }\n\n    if (isReversed) {\n      res = res.reverse();\n    }\n\n    return res;\n  };\n\n  const Reset = () => {\n    if (select !== '' || isReversed) {\n      return (\n        <button\n          type=\"button\"\n          className=\"button is-danger is-light\"\n          onClick={() => {\n            setSelect(SortType.Reset);\n            setReversed(false);\n          }}\n        >\n          Reset\n        </button>\n      );\n    }\n\n    return null;\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info',\n            { 'is-light': select !== SortType.Alphabetically })}\n          onClick={() => {\n            setSelect(SortType.Alphabetically);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success',\n            { 'is-light': select !== SortType.Length })}\n          onClick={() => {\n            setSelect(SortType.Length);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning',\n            { 'is-light': !isReversed })}\n          onClick={() => {\n            setReversed(!isReversed);\n          }}\n        >\n          Reverse\n        </button>\n\n        <Reset />\n      </div>\n\n      <ul>\n        {\n          sortMethod().map(item => <li data-cy=\"Good\" key={item}>{item}</li>)\n        }\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement,\n);\n"],"sourceRoot":""}